/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as AuthImport } from './app/routes/auth'
import { Route as IndexImport } from './app/routes/index'
import { Route as StudentIndexImport } from './app/routes/student/index'
import { Route as MentorIndexImport } from './app/routes/mentor/index'
import { Route as AdminIndexImport } from './app/routes/admin/index'
import { Route as StudentProblemsImport } from './app/routes/student/problems'
import { Route as MentorResumeEditImport } from './app/routes/mentor/resume-edit'
import { Route as MentorActiveTasksImport } from './app/routes/mentor/active-tasks'
import { Route as AdminUsersImport } from './app/routes/admin/users'
import { Route as AdminProblemsImport } from './app/routes/admin/problems'
import { Route as AdminMentorsImport } from './app/routes/admin/mentors'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StudentIndexRoute = StudentIndexImport.update({
  id: '/student/',
  path: '/student/',
  getParentRoute: () => rootRoute,
} as any)

const MentorIndexRoute = MentorIndexImport.update({
  id: '/mentor/',
  path: '/mentor/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const StudentProblemsRoute = StudentProblemsImport.update({
  id: '/student/problems',
  path: '/student/problems',
  getParentRoute: () => rootRoute,
} as any)

const MentorResumeEditRoute = MentorResumeEditImport.update({
  id: '/mentor/resume-edit',
  path: '/mentor/resume-edit',
  getParentRoute: () => rootRoute,
} as any)

const MentorActiveTasksRoute = MentorActiveTasksImport.update({
  id: '/mentor/active-tasks',
  path: '/mentor/active-tasks',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersRoute = AdminUsersImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => rootRoute,
} as any)

const AdminProblemsRoute = AdminProblemsImport.update({
  id: '/admin/problems',
  path: '/admin/problems',
  getParentRoute: () => rootRoute,
} as any)

const AdminMentorsRoute = AdminMentorsImport.update({
  id: '/admin/mentors',
  path: '/admin/mentors',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/admin/mentors': {
      id: '/admin/mentors'
      path: '/admin/mentors'
      fullPath: '/admin/mentors'
      preLoaderRoute: typeof AdminMentorsImport
      parentRoute: typeof rootRoute
    }
    '/admin/problems': {
      id: '/admin/problems'
      path: '/admin/problems'
      fullPath: '/admin/problems'
      preLoaderRoute: typeof AdminProblemsImport
      parentRoute: typeof rootRoute
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersImport
      parentRoute: typeof rootRoute
    }
    '/mentor/active-tasks': {
      id: '/mentor/active-tasks'
      path: '/mentor/active-tasks'
      fullPath: '/mentor/active-tasks'
      preLoaderRoute: typeof MentorActiveTasksImport
      parentRoute: typeof rootRoute
    }
    '/mentor/resume-edit': {
      id: '/mentor/resume-edit'
      path: '/mentor/resume-edit'
      fullPath: '/mentor/resume-edit'
      preLoaderRoute: typeof MentorResumeEditImport
      parentRoute: typeof rootRoute
    }
    '/student/problems': {
      id: '/student/problems'
      path: '/student/problems'
      fullPath: '/student/problems'
      preLoaderRoute: typeof StudentProblemsImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/mentor/': {
      id: '/mentor/'
      path: '/mentor'
      fullPath: '/mentor'
      preLoaderRoute: typeof MentorIndexImport
      parentRoute: typeof rootRoute
    }
    '/student/': {
      id: '/student/'
      path: '/student'
      fullPath: '/student'
      preLoaderRoute: typeof StudentIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/admin/mentors': typeof AdminMentorsRoute
  '/admin/problems': typeof AdminProblemsRoute
  '/admin/users': typeof AdminUsersRoute
  '/mentor/active-tasks': typeof MentorActiveTasksRoute
  '/mentor/resume-edit': typeof MentorResumeEditRoute
  '/student/problems': typeof StudentProblemsRoute
  '/admin': typeof AdminIndexRoute
  '/mentor': typeof MentorIndexRoute
  '/student': typeof StudentIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/admin/mentors': typeof AdminMentorsRoute
  '/admin/problems': typeof AdminProblemsRoute
  '/admin/users': typeof AdminUsersRoute
  '/mentor/active-tasks': typeof MentorActiveTasksRoute
  '/mentor/resume-edit': typeof MentorResumeEditRoute
  '/student/problems': typeof StudentProblemsRoute
  '/admin': typeof AdminIndexRoute
  '/mentor': typeof MentorIndexRoute
  '/student': typeof StudentIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/admin/mentors': typeof AdminMentorsRoute
  '/admin/problems': typeof AdminProblemsRoute
  '/admin/users': typeof AdminUsersRoute
  '/mentor/active-tasks': typeof MentorActiveTasksRoute
  '/mentor/resume-edit': typeof MentorResumeEditRoute
  '/student/problems': typeof StudentProblemsRoute
  '/admin/': typeof AdminIndexRoute
  '/mentor/': typeof MentorIndexRoute
  '/student/': typeof StudentIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/admin/mentors'
    | '/admin/problems'
    | '/admin/users'
    | '/mentor/active-tasks'
    | '/mentor/resume-edit'
    | '/student/problems'
    | '/admin'
    | '/mentor'
    | '/student'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/admin/mentors'
    | '/admin/problems'
    | '/admin/users'
    | '/mentor/active-tasks'
    | '/mentor/resume-edit'
    | '/student/problems'
    | '/admin'
    | '/mentor'
    | '/student'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/admin/mentors'
    | '/admin/problems'
    | '/admin/users'
    | '/mentor/active-tasks'
    | '/mentor/resume-edit'
    | '/student/problems'
    | '/admin/'
    | '/mentor/'
    | '/student/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRoute
  AdminMentorsRoute: typeof AdminMentorsRoute
  AdminProblemsRoute: typeof AdminProblemsRoute
  AdminUsersRoute: typeof AdminUsersRoute
  MentorActiveTasksRoute: typeof MentorActiveTasksRoute
  MentorResumeEditRoute: typeof MentorResumeEditRoute
  StudentProblemsRoute: typeof StudentProblemsRoute
  AdminIndexRoute: typeof AdminIndexRoute
  MentorIndexRoute: typeof MentorIndexRoute
  StudentIndexRoute: typeof StudentIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRoute,
  AdminMentorsRoute: AdminMentorsRoute,
  AdminProblemsRoute: AdminProblemsRoute,
  AdminUsersRoute: AdminUsersRoute,
  MentorActiveTasksRoute: MentorActiveTasksRoute,
  MentorResumeEditRoute: MentorResumeEditRoute,
  StudentProblemsRoute: StudentProblemsRoute,
  AdminIndexRoute: AdminIndexRoute,
  MentorIndexRoute: MentorIndexRoute,
  StudentIndexRoute: StudentIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/admin/mentors",
        "/admin/problems",
        "/admin/users",
        "/mentor/active-tasks",
        "/mentor/resume-edit",
        "/student/problems",
        "/admin/",
        "/mentor/",
        "/student/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/admin/mentors": {
      "filePath": "admin/mentors.tsx"
    },
    "/admin/problems": {
      "filePath": "admin/problems.tsx"
    },
    "/admin/users": {
      "filePath": "admin/users.tsx"
    },
    "/mentor/active-tasks": {
      "filePath": "mentor/active-tasks.tsx"
    },
    "/mentor/resume-edit": {
      "filePath": "mentor/resume-edit.tsx"
    },
    "/student/problems": {
      "filePath": "student/problems.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx"
    },
    "/mentor/": {
      "filePath": "mentor/index.tsx"
    },
    "/student/": {
      "filePath": "student/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
